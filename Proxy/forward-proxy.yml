AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create ALB and Fargate service as a forward proxy

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC Id
    Default: vpc-0897a9f3de7e213c0

  PublicSubnetOne:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet Id for the first public subnet
    Default: subnet-01c1e6167c10cd939

  PublicSubnetTwo:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet Id for the second public subnet
    Default: subnet-0ab49b33aca6b7531

  PrivateSubnetOne:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet Id for the first private subnet
    Default: subnet-0698e2d7aa11f94ad

  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet Id for the second private subnet
    Default: subnet-0dc656e9fbe33dc5c

Resources:
  # Security Group for ALB
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Security Group for Fargate
  FargateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Fargate service
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3128
          ToPort: 3128
          SourceSecurityGroupId: !Ref ALBSecurityGroup

  # ALB
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: forward-proxy-alb
      Subnets:
        - !Ref PublicSubnetOne
        - !Ref PublicSubnetTwo
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing

  # ALB Listener
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  # Target Group for Fargate
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: forward-proxy-tg
      Port: 3128
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip

  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: forward-proxy-cluster

  # ECS Task Definition
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: forward-proxy-task
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: forward-proxy-container
          Image: ubuntu/squid:latest
          PortMappings:
            - ContainerPort: 3128
              HostPort: 3128
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: forward-proxy
          Environment:
            - Name: SQUID_CONFIG
              Value: |
                cache_peer lgas1grdoai01.openai.azure.com parent 443 0 no-query originserver login=PASS ssl sslflags=DONT_VERIFY_PEER
                http_access allow all

  # ECS Log Group
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/forward-proxy

  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref FargateSecurityGroup
          Subnets:
            - !Ref PrivateSubnetOne
            - !Ref PrivateSubnetTwo
      LoadBalancers:
        - ContainerName: forward-proxy-container
          ContainerPort: 3128
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNSName:
    Description: "DNS Name of the Load Balancer"
    Value: !GetAtt LoadBalancer.DNSName
